# Project SQL
## Pick a dataset that interests you (or multiple data sets)



Use the Open Data Sets available from Google BigQuery. You can use your own Google account or Kaggle.



# Imports
# Authentication
# Enable Data Table Entry
# List Projects
# Questions for this dataset

1. How many rows are in the full dataset?

2. How many columns are in the full dataset?

3. What tables are available in the google_political_ads dataset?

4. What columns are available in the google_political_ads dataset?

5. Which advertisers have spent the most money on political ads?

6. How much have specific advertisers (Biden and Trump campaigns) spent on political ads?

7. What is the total spending of Biden and Trump campaigns combined?

8. What is the average spending of Biden and Trump campaigns?

9. How has spending changed over time for a specific advertiser?

### Limitation Aliases
### Basic Queries

#### SELECT (with * and with column names)

How much has each advertiser spent
#### LIMIT



### WHERE

### AND

#### ORDER BY

#### GROUP BY



#### OR

#### LIKE (with % or _ wildcard)

#### BETWEEN

### Sorting and Grouping

#### DISTINCT

### Aggregates

#### MAX

#### MIN

#### SUM

#### AVG

#### COUNT



## Make some plots



Make some cool plots to go with your data. Write SQL queries to get ONLY the information you need for each plot. (Don't pull ALL the data and then just plot a few columns.)



## EXTRA CREDIT:
#### Use a query that joins two tables.

#### Make a model to see if you can predict something

#### Come up with something else cool to do with your data

%%capture

# pandas module

import pandas as pd

import pandas_gbq

import matplotlib.pyplot as plt



# gcp modules

from google.cloud import bigquery



# colab modules

from google.colab import auth

from google.colab import syntax

from google.colab import userdata
auth.authenticate_user()

print('Authenticated')
%load_ext google.colab.data_table

# %unload_ext google.colab.data_table
%alias gcloud gcloud
%%capture

gcloud projects list --sort-by=projectId
project_id = userdata.get('proj-3')
THREE_GB = 3 * 1_000 * 1_000 * 1_000 * 1_000

SIX_GB = 6 * 1_000 * 1_000 * 1_000 * 1_000

TEN_GB = 10 * 1_000 * 1_000 * 1_000 * 1_000

client = bigquery.Client(project=project_id)



row_count = client.query('''

  SELECT

    COUNT(1) as total

  FROM `bigquery-public-data.google_political_ads.creative_stats`

  '''

).to_dataframe()["total"][0]



print(f'Full dataset has {row_count:_} rows')
column_count = client.query('''

     SELECT

       count(*) as total

     FROM

       `bigquery-public-data`.google_political_ads.INFORMATION_SCHEMA.COLUMNS

     WHERE table_name = 'creative_stats'

   ''').to_dataframe()["total"][0]

print(f'Full dataset has {column_count:_} columns')
%%bigquery --project {project_id}

SELECT table_name

FROM `bigquery-public-data`.google_political_ads.INFORMATION_SCHEMA.TABLES
%%bigquery --project {project_id}

SELECT table_name, column_name, data_type

FROM `bigquery-public-data`.google_political_ads.INFORMATION_SCHEMA.COLUMNS;
%%bigquery --project {project_id}

SELECT advertiser_name, SUM(spend_range_min_usd) AS total_spend

FROM `bigquery-public-data`.google_political_ads.creative_stats

GROUP BY advertiser_name

ORDER BY total_spend DESC

LIMIT 10
%%bigquery --project {project_id}

SELECT

    cs1.advertiser_name AS advertiser1,

    cs2.advertiser_name AS advertiser2,

    SUM(cs1.spend_range_min_usd) AS total_spend_1,

    SUM(cs2.spend_range_min_usd) AS total_spend_2

  FROM

    `bigquery-public-data.google_political_ads.creative_stats` AS cs1

    INNER JOIN `bigquery-public-data.google_political_ads.creative_stats` AS cs2 ON cs1.advertiser_name != cs2.advertiser_name

  WHERE cs1.advertiser_name IN ('BIDEN FOR PRESIDENT', 'HARRIS VICTORY FUND', 'HARRIS FOR PRESIDENT', 'BIDEN VICTORY FUND')

   AND cs2.advertiser_name IN ('DONALD J. TRUMP FOR PRESIDENT, INC', 'TRUMP MAKE AMERICA GREAT AGAIN COMMITTEE')

  GROUP BY advertiser1, advertiser2

ORDER BY total_spend_1 DESC, total_spend_2 DESC
%%bigquery --project {project_id}

SELECT

    SUM(CASE WHEN advertiser_name IN ('BIDEN FOR PRESIDENT', 'HARRIS VICTORY FUND', 'HARRIS FOR PRESIDENT', 'BIDEN VICTORY FUND') THEN spend_range_min_usd ELSE 0 END) AS advertiser1_total_spend,

    SUM(CASE WHEN advertiser_name IN ('DONALD J. TRUMP FOR PRESIDENT, INC', 'TRUMP MAKE AMERICA GREAT AGAIN COMMITTEE') THEN spend_range_min_usd ELSE 0 END) AS advertiser2_total_spend

  FROM

    `bigquery-public-data.google_political_ads.creative_stats`;
%%bigquery --project {project_id}

SELECT

    AVG(CASE WHEN advertiser_name IN ('BIDEN FOR PRESIDENT', 'HARRIS VICTORY FUND', 'HARRIS FOR PRESIDENT', 'BIDEN VICTORY FUND') THEN spend_range_min_usd ELSE 0 END) AS advertiser1_avg_spend,

    AVG(CASE WHEN advertiser_name IN ('DONALD J. TRUMP FOR PRESIDENT, INC', 'TRUMP MAKE AMERICA GREAT AGAIN COMMITTEE') THEN spend_range_min_usd ELSE 0 END) AS advertiser2_avg_spend

  FROM

    `bigquery-public-data.google_political_ads.creative_stats`;
advertiser_name = 'BIDEN FOR PRESIDENT' #@param {type:"string"}



df = pd.DataFrame()

df = df[df["advertiser_name"] == advertiser_name]



# Create the plot

plt.figure(figsize=(10, 6))

plt.plot(df['date'], df['daily_spend'])

plt.xlabel('Date')

plt.ylabel('Spending (USD)')

plt.title(f'Spending Over Time for {advertiser_name}')

plt.grid(True)

plt.xticks(rotation=45)

plt.tight_layout()

plt.show()
